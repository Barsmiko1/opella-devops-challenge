michaeljohn@Mac opella-devops-challenge % pwd
/Users/michaeljohn/Documents/repositories/opella-devops-challenge

michaeljohn@Mac opella-devops-challenge % ls
README.md               azure-terraform-infra   steps.md                terraform_outputs.txt
michaeljohn@Mac opella-devops-challenge % 

michaeljohn@Mac opella-devops-challenge % cd azure-terraform-infra/environments/development

michaeljohn@Mac opella-devops-challenge % cd azure-terraform-infra/environments/development 
michaeljohn@Mac development % ls
dev.tfvars      main.tf         outputs.tf      variables.tf
michaeljohn@Mac development % terraform init -var-file=dev.tfvars              
Initializing the backend...
Initializing modules...
Initializing provider plugins...
- Reusing previous version of hashicorp/azurerm from the dependency lock file
- Using previously-installed hashicorp/azurerm v3.0.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

michaeljohn@Mac development % terraform plan -var-file=dev.tfvars          
Acquiring state lock. This may take a few moments...

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.compute.azurerm_linux_virtual_machine.app_vm will be created
  + resource "azurerm_linux_virtual_machine" "app_vm" {
      + admin_username                  = "opellaadmin"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "eastus"
      + max_bid_price                   = -1
      + name                            = "opella-app-vm"
      + network_interface_ids           = (known after apply)
      + patch_mode                      = "ImageDefault"
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "rg-opella-dev"
      + size                            = "Standard_B2s"
      + tags                            = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "User"
        }
      + virtual_machine_id              = (known after apply)

      + admin_ssh_key {
          + public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzep1DcBJZTVfOv9zX+fdbl2DreMQGA8TBxyhSYToxj4Xd2b7fkxeYX2qXcZ+PBXTiEWltmpBGN/wOmkPxUf5iLRUauFtpHlxuBU9eLKKK3DMaDwmyzbWXUKP6DenFet2wgfnC5VRrHnZeTnrcoJyGI5UWtLiQESZ1eqOSH2uGRkhpCek/8yr1iHQfs5A4NPqGztGmgXgy2UagUMRTzQRiBQzAl43zOZdhh/UtQBgS3dhMlUC3DGfISX5x3p9pfYxWhWm8htBTvuRj8X4BWg1Sb4Jxp1img4Rhpwp29D3VjUn6VH3xlFnJUBeDTmiG4fmTtt4T+dWllhoNY7i0bVvT michael-mac-pro"
          + username   = "opellaadmin"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = 30
          + name                      = (known after apply)
          + storage_account_type      = "Premium_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-jammy"
          + publisher = "Canonical"
          + sku       = "22_04-lts-gen2"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # module.compute.azurerm_linux_virtual_machine.web_vm will be created
  + resource "azurerm_linux_virtual_machine" "web_vm" {
      + admin_username                  = "opellaadmin"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "eastus"
      + max_bid_price                   = -1
      + name                            = "opella-web-vm"
      + network_interface_ids           = (known after apply)
      + patch_mode                      = "ImageDefault"
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "rg-opella-dev"
      + size                            = "Standard_B2s"
      + tags                            = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "User"
        }
      + virtual_machine_id              = (known after apply)

      + admin_ssh_key {
          + public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzep1DcBJZTVfOv9zX+fdbl2DreMQGA8TBxyhSYToxj4Xd2b7fkxeYX2qXcZ+PBXTiEWltmpBGN/wOmkPxUf5iLRUauFtpHlxuBU9eLKKK3DMaDwmyzbWXUKP6DenFet2wgfnC5VRrHnZeTnrcoJyGI5UWtLiQESZ1eqOSH2uGRkhpCek/8yr1iHQfs5A4NPqGztGmgXgy2UagUMRTzQRiBQzAl43zOZdhh/UtQBgS3dhMlUC3DGfISX5x3p9pfYxWhWm8htBTvuRj8X4BWg1Sb4Jxp1img4Rhpwp29D3VjUn6VH3xlFnJUBeDTmiG4fmTtt4T+dWllhoNY7i0bVvT michael-mac-pro"
          + username   = "opellaadmin"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = 30
          + name                      = (known after apply)
          + storage_account_type      = "Premium_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-jammy"
          + publisher = "Canonical"
          + sku       = "22_04-lts-gen2"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # module.compute.azurerm_network_interface.app_vm_nic will be created
  + resource "azurerm_network_interface" "app_vm_nic" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "eastus"
      + mac_address                   = (known after apply)
      + name                          = "opella-app-vm-nic"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "rg-opella-dev"
      + tags                          = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "service"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + subnet_id                                          = (known after apply)
        }
    }

  # module.compute.azurerm_network_interface.web_vm_nic will be created
  + resource "azurerm_network_interface" "web_vm_nic" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "eastus"
      + mac_address                   = (known after apply)
      + name                          = "opella-web-vm-nic"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "rg-opella-dev"
      + tags                          = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "service"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # module.compute.azurerm_public_ip.web_vm_public_ip[0] will be created
  + resource "azurerm_public_ip" "web_vm_public_ip" {
      + allocation_method       = "Static"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "opella-web-vm-pip"
      + resource_group_name     = "rg-opella-dev"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
      + tags                    = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "service"
        }
    }

  # module.opella-dev-vnet.azurerm_nat_gateway.nat_gateway[0] will be created
  + resource "azurerm_nat_gateway" "nat_gateway" {
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + location                = "eastus"
      + name                    = "opella-dev-vnet-natgw"
      + resource_group_name     = "rg-opella-dev"
      + resource_guid           = (known after apply)
      + sku_name                = "Standard"
      + tags                    = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "service"
        }
    }

  # module.opella-dev-vnet.azurerm_nat_gateway_public_ip_association.nat_gateway_ip_association[0] will be created
  + resource "azurerm_nat_gateway_public_ip_association" "nat_gateway_ip_association" {
      + id                   = (known after apply)
      + nat_gateway_id       = (known after apply)
      + public_ip_address_id = (known after apply)
    }

  # module.opella-dev-vnet.azurerm_network_security_group.nsg["app-subnet"] will be created
  + resource "azurerm_network_security_group" "nsg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "app-subnet-nsg"
      + resource_group_name = "rg-opella-dev"
      + security_rule       = (known after apply)
      + tags                = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "service"
        }
    }

  # module.opella-dev-vnet.azurerm_network_security_group.nsg["web-subnet"] will be created
  + resource "azurerm_network_security_group" "nsg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "web-subnet-nsg"
      + resource_group_name = "rg-opella-dev"
      + security_rule       = (known after apply)
      + tags                = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "service"
        }
    }

  # module.opella-dev-vnet.azurerm_network_security_rule.nsg_rules["app-subnet-allow_http"] will be created
  + resource "azurerm_network_security_rule" "nsg_rules" {
      + access                      = "Allow"
      + destination_address_prefix  = "*"
      + destination_port_range      = "8080"
      + direction                   = "Inbound"
      + id                          = (known after apply)
      + name                        = "allow_http"
      + network_security_group_name = "app-subnet-nsg"
      + priority                    = 100
      + protocol                    = "Tcp"
      + resource_group_name         = "rg-opella-dev"
      + source_address_prefix       = "*"
      + source_port_range           = "*"
    }

  # module.opella-dev-vnet.azurerm_network_security_rule.nsg_rules["web-subnet-allow_http"] will be created
  + resource "azurerm_network_security_rule" "nsg_rules" {
      + access                      = "Allow"
      + destination_address_prefix  = "*"
      + destination_port_range      = "80"
      + direction                   = "Inbound"
      + id                          = (known after apply)
      + name                        = "allow_http"
      + network_security_group_name = "web-subnet-nsg"
      + priority                    = 100
      + protocol                    = "Tcp"
      + resource_group_name         = "rg-opella-dev"
      + source_address_prefix       = "*"
      + source_port_range           = "*"
    }

  # module.opella-dev-vnet.azurerm_network_security_rule.nsg_rules["web-subnet-allow_https"] will be created
  + resource "azurerm_network_security_rule" "nsg_rules" {
      + access                      = "Allow"
      + destination_address_prefix  = "*"
      + destination_port_range      = "443"
      + direction                   = "Inbound"
      + id                          = (known after apply)
      + name                        = "allow_https"
      + network_security_group_name = "web-subnet-nsg"
      + priority                    = 101
      + protocol                    = "Tcp"
      + resource_group_name         = "rg-opella-dev"
      + source_address_prefix       = "*"
      + source_port_range           = "*"
    }

  # module.opella-dev-vnet.azurerm_network_security_rule.nsg_rules["web-subnet-allow_ssh"] will be created
  + resource "azurerm_network_security_rule" "nsg_rules" {
      + access                      = "Allow"
      + destination_address_prefix  = "*"
      + destination_port_range      = "22"
      + direction                   = "Inbound"
      + id                          = (known after apply)
      + name                        = "allow_ssh"
      + network_security_group_name = "web-subnet-nsg"
      + priority                    = 102
      + protocol                    = "Tcp"
      + resource_group_name         = "rg-opella-dev"
      + source_address_prefix       = "*"
      + source_port_range           = "*"
    }

  # module.opella-dev-vnet.azurerm_public_ip.nat_gateway_ip[0] will be created
  + resource "azurerm_public_ip" "nat_gateway_ip" {
      + allocation_method       = "Static"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "opella-dev-vnet-natgw-ip"
      + resource_group_name     = "rg-opella-dev"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
      + tags                    = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "service"
        }
    }

  # module.opella-dev-vnet.azurerm_resource_group.vnet_rg will be created
  + resource "azurerm_resource_group" "vnet_rg" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "rg-opella-dev"
      + tags     = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "User"
        }
    }

  # module.opella-dev-vnet.azurerm_subnet.subnets["app-subnet"] will be created
  + resource "azurerm_subnet" "subnets" {
      + address_prefixes                               = [
          + "10.5.1.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "app-subnet"
      + resource_group_name                            = "rg-opella-dev"
      + service_endpoints                              = [
          + "Microsoft.KeyVault",
          + "Microsoft.Storage",
        ]
      + virtual_network_name                           = "opella-dev-vnet"
    }

  # module.opella-dev-vnet.azurerm_subnet.subnets["web-subnet"] will be created
  + resource "azurerm_subnet" "subnets" {
      + address_prefixes                               = [
          + "10.5.0.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "web-subnet"
      + resource_group_name                            = "rg-opella-dev"
      + service_endpoints                              = [
          + "Microsoft.KeyVault",
          + "Microsoft.Storage",
        ]
      + virtual_network_name                           = "opella-dev-vnet"
    }

  # module.opella-dev-vnet.azurerm_subnet_nat_gateway_association.nat_gateway_subnet_association["app-subnet"] will be created
  + resource "azurerm_subnet_nat_gateway_association" "nat_gateway_subnet_association" {
      + id             = (known after apply)
      + nat_gateway_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.opella-dev-vnet.azurerm_subnet_nat_gateway_association.nat_gateway_subnet_association["web-subnet"] will be created
  + resource "azurerm_subnet_nat_gateway_association" "nat_gateway_subnet_association" {
      + id             = (known after apply)
      + nat_gateway_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.opella-dev-vnet.azurerm_subnet_network_security_group_association.nsg_association["app-subnet"] will be created
  + resource "azurerm_subnet_network_security_group_association" "nsg_association" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # module.opella-dev-vnet.azurerm_subnet_network_security_group_association.nsg_association["web-subnet"] will be created
  + resource "azurerm_subnet_network_security_group_association" "nsg_association" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # module.opella-dev-vnet.azurerm_virtual_network.vnet will be created
  + resource "azurerm_virtual_network" "vnet" {
      + address_space       = [
          + "10.5.0.0/16",
        ]
      + dns_servers         = []
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "opella-dev-vnet"
      + resource_group_name = "rg-opella-dev"
      + subnet              = (known after apply)
      + tags                = {
          + "CostCenter"  = "DEV-123"
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Development"
          + "Project"     = "Opella DevOps Challenge"
          + "Team"        = "DevOps"
          + "UserType"    = "User"
        }
    }

Plan: 22 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + app_vm_id               = (known after apply)
  + app_vm_private_ip       = (known after apply)
  + nsg_ids                 = {
      + app-subnet = (known after apply)
      + web-subnet = (known after apply)
    }
  + resource_group_id       = (known after apply)
  + resource_group_name     = "rg-opella-dev"
  + subnet_address_prefixes = {
      + app-subnet = "10.5.1.0/24"
      + web-subnet = "10.5.0.0/24"
    }
  + subnet_ids              = {
      + app-subnet = (known after apply)
      + web-subnet = (known after apply)
    }
  + vnet_address_space      = [
      + "10.5.0.0/16",
    ]
  + vnet_id                 = (known after apply)
  + vnet_name               = "opella-dev-vnet"
  + web_vm_id               = (known after apply)
  + web_vm_private_ip       = (known after apply)
  + web_vm_public_ip        = (known after apply)

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.
Releasing state lock. This may take a few moments...
michaeljohn@Mac development % 